# coding: utf-8

"""
    Randori API

    Endpoints accessible using API tokens  # noqa: E501

    The version of the OpenAPI document: 1.0
    Contact: support@randori.com
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import randori_api
from randori_api.models.attack_redirectors import AttackRedirectors  # noqa: E501
from randori_api.rest import ApiException

class TestAttackRedirectors(unittest.TestCase):
    """AttackRedirectors unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test AttackRedirectors
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = randori_api.models.attack_redirectors.AttackRedirectors()  # noqa: E501
        if include_optional :
            return AttackRedirectors(
                bart_id = '0', 
                created_on = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                deleted = True, 
                external_ip = '0', 
                external_ip_str = '0', 
                id = '0', 
                org_id = '0', 
                remote_row_id = 56, 
                retired = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                status = '0', 
                updated_on = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                usage = [
                    '0'
                    ]
            )
        else :
            return AttackRedirectors(
                bart_id = '0',
                created_on = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                deleted = True,
                external_ip = '0',
                external_ip_str = '0',
                org_id = '0',
                remote_row_id = 56,
                status = '0',
                usage = [
                    '0'
                    ],
        )

    def testAttackRedirectors(self):
        """Test AttackRedirectors"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
