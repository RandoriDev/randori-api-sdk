# coding: utf-8

"""
    Randori API

    Endpoints accessible using API tokens

    The version of the OpenAPI document: 1.0
    Contact: support@randori.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from randori_api_sdk.models.authorization_policy_get_output import AuthorizationPolicyGetOutput

class TestAuthorizationPolicyGetOutput(unittest.TestCase):
    """AuthorizationPolicyGetOutput unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AuthorizationPolicyGetOutput:
        """Test AuthorizationPolicyGetOutput
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AuthorizationPolicyGetOutput`
        """
        model = AuthorizationPolicyGetOutput()
        if include_optional:
            return AuthorizationPolicyGetOutput(
                count = 56,
                data = [
                    randori_api_sdk.models.authorization_policy.authorization-policy(
                        actions = [
                            None
                            ], 
                        created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        edited_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        entity_types = [
                            ''
                            ], 
                        expires_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        filter_data = randori_api_sdk.models.filter_data.filter_data(), 
                        id = '', 
                        is_active = True, 
                        is_deleted = True, 
                        is_dirty = True, 
                        name = '', 
                        notes = '', 
                        org_id = '', 
                        version = 56, )
                    ],
                offset = 56,
                total = 56
            )
        else:
            return AuthorizationPolicyGetOutput(
        )
        """

    def testAuthorizationPolicyGetOutput(self):
        """Test AuthorizationPolicyGetOutput"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
