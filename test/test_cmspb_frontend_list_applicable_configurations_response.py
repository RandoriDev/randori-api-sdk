# coding: utf-8

"""
    Randori API

    Endpoints accessible using API tokens

    The version of the OpenAPI document: 1.0
    Contact: support@randori.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from randori_api_sdk.models.cmspb_frontend_list_applicable_configurations_response import CmspbFrontendListApplicableConfigurationsResponse

class TestCmspbFrontendListApplicableConfigurationsResponse(unittest.TestCase):
    """CmspbFrontendListApplicableConfigurationsResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CmspbFrontendListApplicableConfigurationsResponse:
        """Test CmspbFrontendListApplicableConfigurationsResponse
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CmspbFrontendListApplicableConfigurationsResponse`
        """
        model = CmspbFrontendListApplicableConfigurationsResponse()
        if include_optional:
            return CmspbFrontendListApplicableConfigurationsResponse(
                data = [
                    randori_api_sdk.models.cmspb/frontend_list_applicable_configurations_response_applicable_configuration.cmspb.FrontendListApplicableConfigurationsResponse_ApplicableConfiguration(
                        attributes = randori_api_sdk.models.cmspb/frontend_list_applicable_configurations_response_attributes.cmspb.FrontendListApplicableConfigurationsResponse_Attributes(
                            configuration_id = '', 
                            description = '', 
                            last_planned_at = randori_api_sdk.models.timestamppb/timestamp.timestamppb.Timestamp(
                                nanos = 56, 
                                seconds = 56, ), 
                            name = '', 
                            needs_authorization = True, 
                            period = 56, 
                            required_authorization = 56, 
                            stability = 56, 
                            stealth = 56, 
                            trigger_criteria = [
                                randori_api_sdk.models.cmspb/frontend_list_applicable_configurations_response_trigger_criteria.cmspb.FrontendListApplicableConfigurationsResponse_TriggerCriteria(
                                    field_label = '', 
                                    matched = True, 
                                    trigger_identifier = '', )
                                ], ), 
                        id = '', 
                        type = 0, )
                    ],
                links = randori_api_sdk.models.cmspb/frontend_links.cmspb.FrontendLinks(
                    last = '', 
                    next = '', 
                    self = '', ),
                meta = randori_api_sdk.models.cmspb/frontend_meta.cmspb.FrontendMeta(
                    count = 56, 
                    offset = 56, 
                    total = 56, )
            )
        else:
            return CmspbFrontendListApplicableConfigurationsResponse(
        )
        """

    def testCmspbFrontendListApplicableConfigurationsResponse(self):
        """Test CmspbFrontendListApplicableConfigurationsResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
