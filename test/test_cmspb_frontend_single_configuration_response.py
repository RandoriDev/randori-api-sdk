# coding: utf-8

"""
    Randori API

    Endpoints accessible using API tokens

    The version of the OpenAPI document: 1.0
    Contact: support@randori.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from randori_api_sdk.models.cmspb_frontend_single_configuration_response import CmspbFrontendSingleConfigurationResponse

class TestCmspbFrontendSingleConfigurationResponse(unittest.TestCase):
    """CmspbFrontendSingleConfigurationResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CmspbFrontendSingleConfigurationResponse:
        """Test CmspbFrontendSingleConfigurationResponse
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CmspbFrontendSingleConfigurationResponse`
        """
        model = CmspbFrontendSingleConfigurationResponse()
        if include_optional:
            return CmspbFrontendSingleConfigurationResponse(
                data = randori_api_sdk.models.cmspb/frontend_configuration.cmspb.FrontendConfiguration(
                    attributes = randori_api_sdk.models.cmspb/frontend_configuration_attributes.cmspb.FrontendConfiguration_Attributes(
                        activity_type_description = '', 
                        activity_type_name = '', 
                        authority_display = True, 
                        authority_distance_max = 56, 
                        authority_distance_min = 56, 
                        configuration_id = '', 
                        created = randori_api_sdk.models.cmspb/frontend_configuration_access_entry.cmspb.FrontendConfiguration_AccessEntry(
                            author_id = '', 
                            date = randori_api_sdk.models.timestamppb/timestamp.timestamppb.Timestamp(
                                nanos = 56, 
                                seconds = 56, ), ), 
                        cves = [
                            ''
                            ], 
                        description = '', 
                        enabled = True, 
                        entities_count = 56, 
                        last_planned_at = randori_api_sdk.models.timestamppb/timestamp.timestamppb.Timestamp(
                            nanos = 56, 
                            seconds = 56, ), 
                        matching_entity_types = [
                            ''
                            ], 
                        mitre = randori_api_sdk.models.cmspb/frontend_configuration_mitre.cmspb.FrontendConfiguration_Mitre(
                            mitigations = [
                                ''
                                ], 
                            tactics = [
                                ''
                                ], 
                            techniques = [
                                ''
                                ], ), 
                        name = '', 
                        objective = randori_api_sdk.models.cmspb/frontend_configuration_objective.cmspb.FrontendConfiguration_Objective(
                            attackers_perspective = '', 
                            description = '', 
                            implication = '', ), 
                        parameters = [
                            randori_api_sdk.models.cmspb/frontend_parameter_object.cmspb.FrontendParameterObject(
                                type = 0, )
                            ], 
                        period = 56, 
                        required_authorization = 56, 
                        stability = 56, 
                        stealth = 56, 
                        targets_count = 56, 
                        trigger_criteria = [
                            randori_api_sdk.models.cmspb/frontend_trigger_object.cmspb.FrontendTriggerObject()
                            ], 
                        updated = randori_api_sdk.models.cmspb/frontend_configuration_access_entry.cmspb.FrontendConfiguration_AccessEntry(
                            author_id = '', ), 
                        version = '', ), 
                    id = '', 
                    relationships = randori_api_sdk.models.cmspb/relationships.cmspb.Relationships(
                        applicable_entities = randori_api_sdk.models.cmspb/applicable_entities.cmspb.ApplicableEntities(
                            data = [
                                randori_api_sdk.models.cmspb/frontend_applicable_entity.cmspb.FrontendApplicableEntity(
                                    id = '', )
                                ], 
                            links = randori_api_sdk.models.cmspb/frontend_links.cmspb.FrontendLinks(
                                last = '', 
                                next = '', 
                                self = '', ), ), ), 
                    type = 0, ),
                links = randori_api_sdk.models.cmspb/frontend_links_self.cmspb.FrontendLinksSelf(
                    self = '', )
            )
        else:
            return CmspbFrontendSingleConfigurationResponse(
        )
        """

    def testCmspbFrontendSingleConfigurationResponse(self):
        """Test CmspbFrontendSingleConfigurationResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
