# coding: utf-8

"""
    Randori API

    Endpoints accessible using API tokens

    The version of the OpenAPI document: 1.0
    Contact: support@randori.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from randori_api_sdk.models.tagcounts_get_output import TagcountsGetOutput

class TestTagcountsGetOutput(unittest.TestCase):
    """TagcountsGetOutput unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> TagcountsGetOutput:
        """Test TagcountsGetOutput
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `TagcountsGetOutput`
        """
        model = TagcountsGetOutput()
        if include_optional:
            return TagcountsGetOutput(
                count = 56,
                data = [
                    randori_api_sdk.models.tagcounts.tagcounts(
                        all_count = 56, 
                        content = '', 
                        hostname_count = 56, 
                        id = '', 
                        ip_count = 56, 
                        is_characteristic_tag = True, 
                        network_count = 56, 
                        org_id = '', 
                        poc_count = 56, 
                        service_count = 56, 
                        target_count = 56, )
                    ],
                offset = 56,
                total = 56
            )
        else:
            return TagcountsGetOutput(
        )
        """

    def testTagcountsGetOutput(self):
        """Test TagcountsGetOutput"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
