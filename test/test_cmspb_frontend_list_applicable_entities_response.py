# coding: utf-8

"""
    Randori API

    Endpoints accessible using API tokens

    The version of the OpenAPI document: 1.0
    Contact: support@randori.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from randori_api_sdk.models.cmspb_frontend_list_applicable_entities_response import CmspbFrontendListApplicableEntitiesResponse

class TestCmspbFrontendListApplicableEntitiesResponse(unittest.TestCase):
    """CmspbFrontendListApplicableEntitiesResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CmspbFrontendListApplicableEntitiesResponse:
        """Test CmspbFrontendListApplicableEntitiesResponse
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CmspbFrontendListApplicableEntitiesResponse`
        """
        model = CmspbFrontendListApplicableEntitiesResponse()
        if include_optional:
            return CmspbFrontendListApplicableEntitiesResponse(
                data = [
                    randori_api_sdk.models.cmspb/frontend_applicable_entity.cmspb.FrontendApplicableEntity(
                        attributes = randori_api_sdk.models.cmspb/frontend_applicable_entity_attributes.cmspb.FrontendApplicableEntity_Attributes(
                            entity_type = '', 
                            service_id = '', ), 
                        id = '', 
                        type = 0, )
                    ],
                links = randori_api_sdk.models.cmspb/frontend_links.cmspb.FrontendLinks(
                    last = '', 
                    next = '', 
                    self = '', ),
                meta = randori_api_sdk.models.cmspb/frontend_meta.cmspb.FrontendMeta(
                    count = 56, 
                    offset = 56, 
                    total = 56, )
            )
        else:
            return CmspbFrontendListApplicableEntitiesResponse(
        )
        """

    def testCmspbFrontendListApplicableEntitiesResponse(self):
        """Test CmspbFrontendListApplicableEntitiesResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
