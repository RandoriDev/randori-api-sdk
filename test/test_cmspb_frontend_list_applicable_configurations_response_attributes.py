# coding: utf-8

"""
    Randori API

    Endpoints accessible using API tokens

    The version of the OpenAPI document: 1.0
    Contact: support@randori.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from randori_api_sdk.models.cmspb_frontend_list_applicable_configurations_response_attributes import CmspbFrontendListApplicableConfigurationsResponseAttributes

class TestCmspbFrontendListApplicableConfigurationsResponseAttributes(unittest.TestCase):
    """CmspbFrontendListApplicableConfigurationsResponseAttributes unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CmspbFrontendListApplicableConfigurationsResponseAttributes:
        """Test CmspbFrontendListApplicableConfigurationsResponseAttributes
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CmspbFrontendListApplicableConfigurationsResponseAttributes`
        """
        model = CmspbFrontendListApplicableConfigurationsResponseAttributes()
        if include_optional:
            return CmspbFrontendListApplicableConfigurationsResponseAttributes(
                configuration_id = '',
                description = '',
                last_planned_at = randori_api_sdk.models.timestamppb/timestamp.timestamppb.Timestamp(
                    nanos = 56, 
                    seconds = 56, ),
                name = '',
                needs_authorization = True,
                period = 56,
                required_authorization = 56,
                stability = 56,
                stealth = 56,
                trigger_criteria = [
                    randori_api_sdk.models.cmspb/frontend_list_applicable_configurations_response_trigger_criteria.cmspb.FrontendListApplicableConfigurationsResponse_TriggerCriteria(
                        field_label = '', 
                        matched = True, 
                        trigger_identifier = '', )
                    ]
            )
        else:
            return CmspbFrontendListApplicableConfigurationsResponseAttributes(
        )
        """

    def testCmspbFrontendListApplicableConfigurationsResponseAttributes(self):
        """Test CmspbFrontendListApplicableConfigurationsResponseAttributes"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
