# coding: utf-8

"""
    Randori API

    Endpoints accessible using API tokens

    The version of the OpenAPI document: 1.0
    Contact: support@randori.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from randori_api_sdk.models.activity_log_single_output import ActivityLogSingleOutput

class TestActivityLogSingleOutput(unittest.TestCase):
    """ActivityLogSingleOutput unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ActivityLogSingleOutput:
        """Test ActivityLogSingleOutput
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ActivityLogSingleOutput`
        """
        model = ActivityLogSingleOutput()
        if include_optional:
            return ActivityLogSingleOutput(
                data = randori_api_sdk.models.activity_log.activity-log(
                    configuration__description = '', 
                    configuration__id = '', 
                    configuration__name = '', 
                    configuration__version_id = '', 
                    count__artifacts = 56, 
                    count__entities_updated = 56, 
                    count__relationships_deleted = 56, 
                    id = '', 
                    instance__most_recent_instance_id = '', 
                    instance__perspective = '', 
                    instance__state = '', 
                    instance__time_duration = 56, 
                    instance__time_end = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    instance__time_start = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    matching_entity__detection = '', 
                    matching_entity__email = '', 
                    matching_entity__hostname = '', 
                    matching_entity__id = '', 
                    matching_entity__ip = '', 
                    matching_entity__name = '', 
                    matching_entity__network = '', 
                    matching_entity__target = '', 
                    matching_entity__term = '', 
                    matching_entity__type = '', 
                    mitre__mitigations = [
                        ''
                        ], 
                    mitre__tactics = [
                        ''
                        ], 
                    mitre__techniques = [
                        ''
                        ], 
                    objective__attacker_perspective = '', 
                    objective__description = '', 
                    objective__implication = '', 
                    objective__status = '', 
                    org_id = '', 
                    traffic_destination = '', 
                    traffic_destination_detail = randori_api_sdk.models.traffic_destination_detail.traffic_destination_detail(), 
                    traffic_source__ip_name = '', )
            )
        else:
            return ActivityLogSingleOutput(
        )
        """

    def testActivityLogSingleOutput(self):
        """Test ActivityLogSingleOutput"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
