# coding: utf-8

"""
    Randori API

    Endpoints accessible using API tokens

    The version of the OpenAPI document: 1.0
    Contact: support@randori.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from randori_api_sdk.models.cmspb_frontend_configuration_attributes import CmspbFrontendConfigurationAttributes

class TestCmspbFrontendConfigurationAttributes(unittest.TestCase):
    """CmspbFrontendConfigurationAttributes unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CmspbFrontendConfigurationAttributes:
        """Test CmspbFrontendConfigurationAttributes
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CmspbFrontendConfigurationAttributes`
        """
        model = CmspbFrontendConfigurationAttributes()
        if include_optional:
            return CmspbFrontendConfigurationAttributes(
                activity_type_description = '',
                activity_type_name = '',
                authority_display = True,
                authority_distance_max = 56,
                authority_distance_min = 56,
                configuration_id = '',
                created = randori_api_sdk.models.cmspb/frontend_configuration_access_entry.cmspb.FrontendConfiguration_AccessEntry(
                    author_id = '', 
                    date = randori_api_sdk.models.timestamppb/timestamp.timestamppb.Timestamp(
                        nanos = 56, 
                        seconds = 56, ), ),
                cves = [
                    ''
                    ],
                description = '',
                enabled = True,
                entities_count = 56,
                last_planned_at = randori_api_sdk.models.timestamppb/timestamp.timestamppb.Timestamp(
                    nanos = 56, 
                    seconds = 56, ),
                matching_entity_types = [
                    ''
                    ],
                mitre = randori_api_sdk.models.cmspb/frontend_configuration_mitre.cmspb.FrontendConfiguration_Mitre(
                    mitigations = [
                        ''
                        ], 
                    tactics = [
                        ''
                        ], 
                    techniques = [
                        ''
                        ], ),
                name = '',
                objective = randori_api_sdk.models.cmspb/frontend_configuration_objective.cmspb.FrontendConfiguration_Objective(
                    attackers_perspective = '', 
                    description = '', 
                    implication = '', ),
                parameters = [
                    randori_api_sdk.models.cmspb/frontend_parameter_object.cmspb.FrontendParameterObject(
                        attributes = randori_api_sdk.models.cmspb/frontend_parameter.cmspb.FrontendParameter(
                            description = '', 
                            field_label = '', 
                            field_type = '', 
                            is_configurable = True, 
                            is_not_set = True, 
                            is_optional = True, 
                            parameter = '', 
                            parameter_type = 0, 
                            validation = randori_api_sdk.models.cmspb/frontend_validation.cmspb.FrontendValidation(
                                error_text = '', 
                                kind = '', 
                                value = '', ), 
                            value = randori_api_sdk.models.structpb/value.structpb.Value(
                                kind = null, ), ), 
                        type = 0, )
                    ],
                period = 56,
                required_authorization = 56,
                stability = 56,
                stealth = 56,
                targets_count = 56,
                trigger_criteria = [
                    randori_api_sdk.models.cmspb/frontend_trigger_object.cmspb.FrontendTriggerObject(
                        attributes = randori_api_sdk.models.cmspb/frontend_trigger.cmspb.FrontendTrigger(
                            description = '', 
                            display_value = '', 
                            field_label = '', 
                            field_type = '', 
                            input_variable_path = '', 
                            is_configurable = True, 
                            is_matching = True, 
                            is_standard = True, 
                            operator = '', 
                            trigger_identifier = '', 
                            validation = randori_api_sdk.models.cmspb/frontend_validation.cmspb.FrontendValidation(
                                error_text = '', 
                                kind = '', 
                                value = '', ), 
                            value = randori_api_sdk.models.structpb/value.structpb.Value(
                                kind = null, ), ), 
                        type = 0, )
                    ],
                updated = randori_api_sdk.models.cmspb/frontend_configuration_access_entry.cmspb.FrontendConfiguration_AccessEntry(
                    author_id = '', 
                    date = randori_api_sdk.models.timestamppb/timestamp.timestamppb.Timestamp(
                        nanos = 56, 
                        seconds = 56, ), ),
                version = ''
            )
        else:
            return CmspbFrontendConfigurationAttributes(
        )
        """

    def testCmspbFrontendConfigurationAttributes(self):
        """Test CmspbFrontendConfigurationAttributes"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
