# coding: utf-8

"""
    Randori API

    Endpoints accessible using API tokens

    The version of the OpenAPI document: 1.0
    Contact: support@randori.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from randori_api_sdk.api.default_api import DefaultApi


class TestDefaultApi(unittest.TestCase):
    """DefaultApi unit test stubs"""

    def setUp(self) -> None:
        self.api = DefaultApi()

    def tearDown(self) -> None:
        pass

    def test_add_affiliation_file(self) -> None:
        """Test case for add_affiliation_file

        """
        pass

    def test_artifacts(self) -> None:
        """Test case for artifacts

        """
        pass

    def test_change_password(self) -> None:
        """Test case for change_password

        """
        pass

    def test_comment(self) -> None:
        """Test case for comment

        """
        pass

    def test_comment_0(self) -> None:
        """Test case for comment_0

        """
        pass

    def test_delete_single_saved_views(self) -> None:
        """Test case for delete_single_saved_views

        """
        pass

    def test_features(self) -> None:
        """Test case for features

        """
        pass

    def test_features_org(self) -> None:
        """Test case for features_org

        """
        pass

    def test_get_action_metadata(self) -> None:
        """Test case for get_action_metadata

        """
        pass

    def test_get_activity_log(self) -> None:
        """Test case for get_activity_log

        """
        pass

    def test_get_all_detections_for_target(self) -> None:
        """Test case for get_all_detections_for_target

        """
        pass

    def test_get_attack_checkins_for_implant(self) -> None:
        """Test case for get_attack_checkins_for_implant

        """
        pass

    def test_get_attack_implants(self) -> None:
        """Test case for get_attack_implants

        """
        pass

    def test_get_attack_interfaces_for_implant(self) -> None:
        """Test case for get_attack_interfaces_for_implant

        """
        pass

    def test_get_attack_redirectors(self) -> None:
        """Test case for get_attack_redirectors

        """
        pass

    def test_get_attack_runbook(self) -> None:
        """Test case for get_attack_runbook

        """
        pass

    def test_get_attack_statistics(self) -> None:
        """Test case for get_attack_statistics

        """
        pass

    def test_get_authorization_policy(self) -> None:
        """Test case for get_authorization_policy

        """
        pass

    def test_get_guidance_file(self) -> None:
        """Test case for get_guidance_file

        """
        pass

    def test_get_hostname(self) -> None:
        """Test case for get_hostname

        """
        pass

    def test_get_hostnames_for_ip(self) -> None:
        """Test case for get_hostnames_for_ip

        """
        pass

    def test_get_ip(self) -> None:
        """Test case for get_ip

        """
        pass

    def test_get_ips_for_hostname(self) -> None:
        """Test case for get_ips_for_hostname

        """
        pass

    def test_get_ips_for_network(self) -> None:
        """Test case for get_ips_for_network

        """
        pass

    def test_get_ips_for_service(self) -> None:
        """Test case for get_ips_for_service

        """
        pass

    def test_get_network(self) -> None:
        """Test case for get_network

        """
        pass

    def test_get_organization(self) -> None:
        """Test case for get_organization

        """
        pass

    def test_get_policy(self) -> None:
        """Test case for get_policy

        """
        pass

    def test_get_ports_for_ip(self) -> None:
        """Test case for get_ports_for_ip

        """
        pass

    def test_get_preferences(self) -> None:
        """Test case for get_preferences

        """
        pass

    def test_get_saved_views(self) -> None:
        """Test case for get_saved_views

        """
        pass

    def test_get_service(self) -> None:
        """Test case for get_service

        """
        pass

    def test_get_single_action_metadata(self) -> None:
        """Test case for get_single_action_metadata

        """
        pass

    def test_get_single_activity_log(self) -> None:
        """Test case for get_single_activity_log

        """
        pass

    def test_get_single_attack_implants(self) -> None:
        """Test case for get_single_attack_implants

        """
        pass

    def test_get_single_detection_for_target(self) -> None:
        """Test case for get_single_detection_for_target

        """
        pass

    def test_get_single_hostname(self) -> None:
        """Test case for get_single_hostname

        """
        pass

    def test_get_single_hostnames_for_ip(self) -> None:
        """Test case for get_single_hostnames_for_ip

        """
        pass

    def test_get_single_ip(self) -> None:
        """Test case for get_single_ip

        """
        pass

    def test_get_single_ips_for_hostname(self) -> None:
        """Test case for get_single_ips_for_hostname

        """
        pass

    def test_get_single_ips_for_network(self) -> None:
        """Test case for get_single_ips_for_network

        """
        pass

    def test_get_single_ips_for_service(self) -> None:
        """Test case for get_single_ips_for_service

        """
        pass

    def test_get_single_network(self) -> None:
        """Test case for get_single_network

        """
        pass

    def test_get_single_organization(self) -> None:
        """Test case for get_single_organization

        """
        pass

    def test_get_single_ports_for_ip(self) -> None:
        """Test case for get_single_ports_for_ip

        """
        pass

    def test_get_single_saved_views(self) -> None:
        """Test case for get_single_saved_views

        """
        pass

    def test_get_single_service(self) -> None:
        """Test case for get_single_service

        """
        pass

    def test_get_single_tagcounts(self) -> None:
        """Test case for get_single_tagcounts

        """
        pass

    def test_get_single_target(self) -> None:
        """Test case for get_single_target

        """
        pass

    def test_get_single_user(self) -> None:
        """Test case for get_single_user

        """
        pass

    def test_get_social_entity(self) -> None:
        """Test case for get_social_entity

        """
        pass

    def test_get_statistics(self) -> None:
        """Test case for get_statistics

        """
        pass

    def test_get_tagcounts(self) -> None:
        """Test case for get_tagcounts

        """
        pass

    def test_get_target(self) -> None:
        """Test case for get_target

        """
        pass

    def test_get_user(self) -> None:
        """Test case for get_user

        """
        pass

    def test_login(self) -> None:
        """Test case for login

        """
        pass

    def test_login_otp(self) -> None:
        """Test case for login_otp

        """
        pass

    def test_logout(self) -> None:
        """Test case for logout

        """
        pass

    def test_manual_authorization(self) -> None:
        """Test case for manual_authorization

        """
        pass

    def test_mitre_mitigation(self) -> None:
        """Test case for mitre_mitigation

        """
        pass

    def test_mitre_tactic(self) -> None:
        """Test case for mitre_tactic

        """
        pass

    def test_mitre_technique(self) -> None:
        """Test case for mitre_technique

        """
        pass

    def test_org_with_feature(self) -> None:
        """Test case for org_with_feature

        """
        pass

    def test_patch_hostname(self) -> None:
        """Test case for patch_hostname

        """
        pass

    def test_patch_ip(self) -> None:
        """Test case for patch_ip

        """
        pass

    def test_patch_network(self) -> None:
        """Test case for patch_network

        """
        pass

    def test_patch_single_saved_views(self) -> None:
        """Test case for patch_single_saved_views

        """
        pass

    def test_patch_single_user(self) -> None:
        """Test case for patch_single_user

        """
        pass

    def test_patch_social_entity(self) -> None:
        """Test case for patch_social_entity

        """
        pass

    def test_patch_target(self) -> None:
        """Test case for patch_target

        """
        pass

    def test_paths(self) -> None:
        """Test case for paths

        """
        pass

    def test_permission_group_types(self) -> None:
        """Test case for permission_group_types

        """
        pass

    def test_permission_groups_read(self) -> None:
        """Test case for permission_groups_read

        """
        pass

    def test_post_comment_multi(self) -> None:
        """Test case for post_comment_multi

        """
        pass

    def test_post_saved_views(self) -> None:
        """Test case for post_saved_views

        """
        pass

    def test_recon_worker_node_ips(self) -> None:
        """Test case for recon_worker_node_ips

        """
        pass

    def test_renew(self) -> None:
        """Test case for renew

        """
        pass

    def test_renew_api_token(self) -> None:
        """Test case for renew_api_token

        """
        pass

    def test_tag(self) -> None:
        """Test case for tag

        """
        pass

    def test_uuid_artifactsource_uuid(self) -> None:
        """Test case for uuid_artifactsource_uuid

        """
        pass

    def test_uuid_comment_id(self) -> None:
        """Test case for uuid_comment_id

        """
        pass

    def test_uuid_comment_id_0(self) -> None:
        """Test case for uuid_comment_id_0

        """
        pass

    def test_validate(self) -> None:
        """Test case for validate

        """
        pass

    def test_validate_user_jwt(self) -> None:
        """Test case for validate_user_jwt

        """
        pass


if __name__ == '__main__':
    unittest.main()
