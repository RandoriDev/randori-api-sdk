######################################################################
# Â© Copyright IBM Corp. 2024
######################################################################
name: Build new SDK version

on:
  push:
    branches:
      - "*"

jobs:
  build:
    name: Build release
    runs-on: ubuntu-22.04
    defaults:
      run:
        working-directory: ${{ github.workspace }}
    steps:
      - name: Checkout git repo
        uses: actions/checkout@v4

      - name: Detect version
        shell: bash
        run: echo "VERSION=$(shell cat ./VERSION)" >> $GITHUB_ENV

      - name: Check if on head branch
        shell: bash
        run: |
          if "${{ github.ref }}" == "refs/heads/main" ]]; then
              echo "ON_HEAD_BRANCH=true" >> $GITHUB_ENV
          else
              echo "ON_HEAD_BRANCH=false" >> $GITHUB_ENV
          fi
      
      - name: Check if tagged
        shell: bash
        run: git show-ref --tags --verify --quiet -- "refs/tags/${{ env.VERSION }}" && echo "TAGGED=true" >> $GITHUB_ENV || echo "TAGGED=false" >> $GITHUB_ENV

      - name: Generate randori-api.json
        run: |
          echo ${{ secrets.RANDORI_API_SPEC }} > randori-api.b64
          base64 randori-api.b64 -d > randori-api.json.xz
          xz randori-api.json.xz -d

      - name: Build sdk
        run: make build

      - name: Commit changes to branch
        if: ${{ env.ON_HEAD_BRANCH == 'false' }}
        run: |
          git config --global user.email ${{github.event.pusher.email}}
          git config --global user.name ${{github.event.pusher.name}}
          git add .
          git reset -- randori-api.b64 randori-api.json gha-creds-*
          git commit -m "auto-update" || echo "No changes to commit"
          git push

      - name: Release SDK
        if: ${{ env.ON_HEAD_BRANCH == 'true' && env.TAGGED == 'false' }}
        uses: softprops/action-gh-release@v1
        with:
          generate_release_notes: true
          tag_name: ${{ env.VERSION }}
          target_commitish: ${{ github.sha }}
          name: ${{ env.VERSION }}
