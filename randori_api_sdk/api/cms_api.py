"""
    Randori API SDK

    A python client library for accessing Randori API endpoints using API tokens  # noqa: E501

    The version of the OpenAPI document: 1.0
    Contact: support@randori.com
    Generated by: https://openapi-generator.tech
"""


import re  # noqa: F401
import sys  # noqa: F401

from randori_api_sdk.api_client import ApiClient, Endpoint as _Endpoint
from randori_api_sdk.model_utils import (  # noqa: F401
    check_allowed_values,
    check_validations,
    date,
    datetime,
    file_type,
    none_type,
    validate_and_convert_types
)
from randori_api_sdk.model.cms_update_parameter_request import CmsUpdateParameterRequest
from randori_api_sdk.model.cms_update_trigger_request import CmsUpdateTriggerRequest
from randori_api_sdk.model.cms_validate_now_request import CmsValidateNowRequest
from randori_api_sdk.model.cmspb_edit_configuration_request import CmspbEditConfigurationRequest
from randori_api_sdk.model.cmspb_frontend_list_applicable_configurations_response import CmspbFrontendListApplicableConfigurationsResponse
from randori_api_sdk.model.cmspb_frontend_list_applicable_entities_response import CmspbFrontendListApplicableEntitiesResponse
from randori_api_sdk.model.cmspb_frontend_list_configurations_response import CmspbFrontendListConfigurationsResponse
from randori_api_sdk.model.cmspb_frontend_parameters_response import CmspbFrontendParametersResponse
from randori_api_sdk.model.cmspb_frontend_run_now_job_response import CmspbFrontendRunNowJobResponse
from randori_api_sdk.model.cmspb_frontend_single_configuration_response import CmspbFrontendSingleConfigurationResponse
from randori_api_sdk.model.cmspb_frontend_single_parameter_response import CmspbFrontendSingleParameterResponse
from randori_api_sdk.model.cmspb_frontend_single_trigger_response import CmspbFrontendSingleTriggerResponse
from randori_api_sdk.model.cmspb_frontend_triggers_response import CmspbFrontendTriggersResponse


class CmsApi(object):
    """NOTE: This class is auto generated by OpenAPI Generator
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    def __init__(self, api_client=None):
        if api_client is None:
            api_client = ApiClient()
        self.api_client = api_client
        self.frontend_edit_activity_configuration_endpoint = _Endpoint(
            settings={
                'response_type': (CmspbFrontendSingleConfigurationResponse,),
                'auth': [
                    'bearerAuth'
                ],
                'endpoint_path': '/cms/api/v1/frontend/activity-configurations/{id}',
                'operation_id': 'frontend_edit_activity_configuration',
                'http_method': 'PATCH',
                'servers': None,
            },
            params_map={
                'all': [
                    'id',
                    'cmspb_edit_configuration_request',
                ],
                'required': [
                    'id',
                    'cmspb_edit_configuration_request',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'id':
                        (str,),
                    'cmspb_edit_configuration_request':
                        (CmspbEditConfigurationRequest,),
                },
                'attribute_map': {
                    'id': 'id',
                },
                'location_map': {
                    'id': 'path',
                    'cmspb_edit_configuration_request': 'body',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )
        self.frontend_edit_activity_configuration_criteria_endpoint = _Endpoint(
            settings={
                'response_type': (CmspbFrontendSingleConfigurationResponse,),
                'auth': [
                    'bearerAuth'
                ],
                'endpoint_path': '/cms/api/v1/frontend/activity-configurations/{id}/trigger_criteria/{name}',
                'operation_id': 'frontend_edit_activity_configuration_criteria',
                'http_method': 'POST',
                'servers': None,
            },
            params_map={
                'all': [
                    'id',
                    'name',
                    'cms_update_trigger_request',
                ],
                'required': [
                    'id',
                    'name',
                    'cms_update_trigger_request',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'id':
                        (str,),
                    'name':
                        (str,),
                    'cms_update_trigger_request':
                        (CmsUpdateTriggerRequest,),
                },
                'attribute_map': {
                    'id': 'id',
                    'name': 'name',
                },
                'location_map': {
                    'id': 'path',
                    'name': 'path',
                    'cms_update_trigger_request': 'body',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )
        self.frontend_edit_activity_configuration_parameter_endpoint = _Endpoint(
            settings={
                'response_type': (CmspbFrontendSingleConfigurationResponse,),
                'auth': [
                    'bearerAuth'
                ],
                'endpoint_path': '/cms/api/v1/frontend/activity-configurations/{id}/parameters/{name}/{kind}',
                'operation_id': 'frontend_edit_activity_configuration_parameter',
                'http_method': 'POST',
                'servers': None,
            },
            params_map={
                'all': [
                    'id',
                    'name',
                    'kind',
                    'cms_update_parameter_request',
                ],
                'required': [
                    'id',
                    'name',
                    'kind',
                    'cms_update_parameter_request',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'id':
                        (str,),
                    'name':
                        (str,),
                    'kind':
                        (str,),
                    'cms_update_parameter_request':
                        (CmsUpdateParameterRequest,),
                },
                'attribute_map': {
                    'id': 'id',
                    'name': 'name',
                    'kind': 'kind',
                },
                'location_map': {
                    'id': 'path',
                    'name': 'path',
                    'kind': 'path',
                    'cms_update_parameter_request': 'body',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )
        self.frontend_get_configuration_criteria_endpoint = _Endpoint(
            settings={
                'response_type': (CmspbFrontendSingleTriggerResponse,),
                'auth': [
                    'bearerAuth'
                ],
                'endpoint_path': '/cms/api/v1/frontend/activity-configurations/{id}/trigger_criteria/{name}',
                'operation_id': 'frontend_get_configuration_criteria',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'id',
                    'name',
                ],
                'required': [
                    'id',
                    'name',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'id':
                        (str,),
                    'name':
                        (str,),
                },
                'attribute_map': {
                    'id': 'id',
                    'name': 'name',
                },
                'location_map': {
                    'id': 'path',
                    'name': 'path',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )
        self.frontend_get_configuration_parameter_endpoint = _Endpoint(
            settings={
                'response_type': (CmspbFrontendSingleParameterResponse,),
                'auth': [
                    'bearerAuth'
                ],
                'endpoint_path': '/cms/api/v1/frontend/activity-configurations/{id}/parameters/{name}/{kind}',
                'operation_id': 'frontend_get_configuration_parameter',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'id',
                    'name',
                    'kind',
                ],
                'required': [
                    'id',
                    'name',
                    'kind',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'id':
                        (str,),
                    'name':
                        (str,),
                    'kind':
                        (str,),
                },
                'attribute_map': {
                    'id': 'id',
                    'name': 'name',
                    'kind': 'kind',
                },
                'location_map': {
                    'id': 'path',
                    'name': 'path',
                    'kind': 'path',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )
        self.frontend_list_activity_configuration_endpoint = _Endpoint(
            settings={
                'response_type': (CmspbFrontendListConfigurationsResponse,),
                'auth': [
                    'bearerAuth'
                ],
                'endpoint_path': '/cms/api/v1/frontend/activity-configurations',
                'operation_id': 'frontend_list_activity_configuration',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'q',
                    'sort',
                    'limit',
                    'offset',
                ],
                'required': [],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'q':
                        (str,),
                    'sort':
                        (str,),
                    'limit':
                        (int,),
                    'offset':
                        (int,),
                },
                'attribute_map': {
                    'q': 'q',
                    'sort': 'sort',
                    'limit': 'limit',
                    'offset': 'offset',
                },
                'location_map': {
                    'q': 'query',
                    'sort': 'query',
                    'limit': 'query',
                    'offset': 'query',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )
        self.frontend_list_activity_configuration_criteria_endpoint = _Endpoint(
            settings={
                'response_type': (CmspbFrontendTriggersResponse,),
                'auth': [
                    'bearerAuth'
                ],
                'endpoint_path': '/cms/api/v1/frontend/activity-configurations/{id}/trigger_criteria',
                'operation_id': 'frontend_list_activity_configuration_criteria',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'id',
                    'limit',
                    'offset',
                ],
                'required': [
                    'id',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'id':
                        (str,),
                    'limit':
                        (int,),
                    'offset':
                        (int,),
                },
                'attribute_map': {
                    'id': 'id',
                    'limit': 'limit',
                    'offset': 'offset',
                },
                'location_map': {
                    'id': 'path',
                    'limit': 'query',
                    'offset': 'query',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )
        self.frontend_list_activity_configuration_parameters_endpoint = _Endpoint(
            settings={
                'response_type': (CmspbFrontendParametersResponse,),
                'auth': [
                    'bearerAuth'
                ],
                'endpoint_path': '/cms/api/v1/frontend/activity-configurations/{id}/parameters',
                'operation_id': 'frontend_list_activity_configuration_parameters',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'id',
                    'limit',
                    'offset',
                ],
                'required': [
                    'id',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'id':
                        (str,),
                    'limit':
                        (int,),
                    'offset':
                        (int,),
                },
                'attribute_map': {
                    'id': 'id',
                    'limit': 'limit',
                    'offset': 'offset',
                },
                'location_map': {
                    'id': 'path',
                    'limit': 'query',
                    'offset': 'query',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )
        self.frontend_list_applicable_activities_endpoint = _Endpoint(
            settings={
                'response_type': (CmspbFrontendListApplicableConfigurationsResponse,),
                'auth': [
                    'bearerAuth'
                ],
                'endpoint_path': '/cms/api/v1/frontend/applicable-activities/{entity_type}/{entity_id}',
                'operation_id': 'frontend_list_applicable_activities',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'entity_type',
                    'entity_id',
                    'sort',
                    'limit',
                    'offset',
                ],
                'required': [
                    'entity_type',
                    'entity_id',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'entity_type':
                        (str,),
                    'entity_id':
                        (str,),
                    'sort':
                        (str,),
                    'limit':
                        (int,),
                    'offset':
                        (int,),
                },
                'attribute_map': {
                    'entity_type': 'entity_type',
                    'entity_id': 'entity_id',
                    'sort': 'sort',
                    'limit': 'limit',
                    'offset': 'offset',
                },
                'location_map': {
                    'entity_type': 'path',
                    'entity_id': 'path',
                    'sort': 'query',
                    'limit': 'query',
                    'offset': 'query',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )
        self.frontend_list_applicable_entities_parameters_endpoint = _Endpoint(
            settings={
                'response_type': (CmspbFrontendListApplicableEntitiesResponse,),
                'auth': [
                    'bearerAuth'
                ],
                'endpoint_path': '/cms/api/v1/frontend/activity-configurations/{id}/applicable-entities/{entity_type}',
                'operation_id': 'frontend_list_applicable_entities_parameters',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'id',
                    'entity_type',
                    'limit',
                    'offset',
                ],
                'required': [
                    'id',
                    'entity_type',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'id':
                        (str,),
                    'entity_type':
                        (str,),
                    'limit':
                        (int,),
                    'offset':
                        (int,),
                },
                'attribute_map': {
                    'id': 'id',
                    'entity_type': 'entity_type',
                    'limit': 'limit',
                    'offset': 'offset',
                },
                'location_map': {
                    'id': 'path',
                    'entity_type': 'path',
                    'limit': 'query',
                    'offset': 'query',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )
        self.frontend_list_single_activity_configuration_endpoint = _Endpoint(
            settings={
                'response_type': (CmspbFrontendSingleConfigurationResponse,),
                'auth': [
                    'bearerAuth'
                ],
                'endpoint_path': '/cms/api/v1/frontend/activity-configurations/{id}',
                'operation_id': 'frontend_list_single_activity_configuration',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'id',
                ],
                'required': [
                    'id',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'id':
                        (str,),
                },
                'attribute_map': {
                    'id': 'id',
                },
                'location_map': {
                    'id': 'path',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )
        self.frontend_validate_now_endpoint = _Endpoint(
            settings={
                'response_type': (CmspbFrontendRunNowJobResponse,),
                'auth': [
                    'bearerAuth'
                ],
                'endpoint_path': '/cms/api/v1/frontend/validate',
                'operation_id': 'frontend_validate_now',
                'http_method': 'POST',
                'servers': None,
            },
            params_map={
                'all': [
                    'cms_validate_now_request',
                ],
                'required': [
                    'cms_validate_now_request',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'cms_validate_now_request':
                        (CmsValidateNowRequest,),
                },
                'attribute_map': {
                },
                'location_map': {
                    'cms_validate_now_request': 'body',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )

    def frontend_edit_activity_configuration(
        self,
        id,
        cmspb_edit_configuration_request,
        **kwargs
    ):
        """Edit activity configurations  # noqa: E501

        Edit activity configurations  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.frontend_edit_activity_configuration(id, cmspb_edit_configuration_request, async_req=True)
        >>> result = thread.get()

        Args:
            id (str): Activity Configuration ID
            cmspb_edit_configuration_request (CmspbEditConfigurationRequest): Activity Configuration edit request

        Keyword Args:
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            async_req (bool): execute request asynchronously

        Returns:
            CmspbFrontendSingleConfigurationResponse
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['id'] = \
            id
        kwargs['cmspb_edit_configuration_request'] = \
            cmspb_edit_configuration_request
        return self.frontend_edit_activity_configuration_endpoint.call_with_http_info(**kwargs)

    def frontend_edit_activity_configuration_criteria(
        self,
        id,
        name,
        cms_update_trigger_request,
        **kwargs
    ):
        """Edit activity configuration criteria  # noqa: E501

        Edit activity configuration criteria  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.frontend_edit_activity_configuration_criteria(id, name, cms_update_trigger_request, async_req=True)
        >>> result = thread.get()

        Args:
            id (str): Activity Configuration ID
            name (str): Criteria name
            cms_update_trigger_request (CmsUpdateTriggerRequest): Criteria edit request

        Keyword Args:
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            async_req (bool): execute request asynchronously

        Returns:
            CmspbFrontendSingleConfigurationResponse
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['id'] = \
            id
        kwargs['name'] = \
            name
        kwargs['cms_update_trigger_request'] = \
            cms_update_trigger_request
        return self.frontend_edit_activity_configuration_criteria_endpoint.call_with_http_info(**kwargs)

    def frontend_edit_activity_configuration_parameter(
        self,
        id,
        name,
        kind,
        cms_update_parameter_request,
        **kwargs
    ):
        """Edit activity configuration parameter  # noqa: E501

        Edit activity configuration parameter  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.frontend_edit_activity_configuration_parameter(id, name, kind, cms_update_parameter_request, async_req=True)
        >>> result = thread.get()

        Args:
            id (str): Activity Configuration ID
            name (str): Criteria name
            kind (str): Parameter kind (configuration or execution)
            cms_update_parameter_request (CmsUpdateParameterRequest): Parameter edit request

        Keyword Args:
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            async_req (bool): execute request asynchronously

        Returns:
            CmspbFrontendSingleConfigurationResponse
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['id'] = \
            id
        kwargs['name'] = \
            name
        kwargs['kind'] = \
            kind
        kwargs['cms_update_parameter_request'] = \
            cms_update_parameter_request
        return self.frontend_edit_activity_configuration_parameter_endpoint.call_with_http_info(**kwargs)

    def frontend_get_configuration_criteria(
        self,
        id,
        name,
        **kwargs
    ):
        """Get activity configuration criteria  # noqa: E501

        Get activity configuration criteria  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.frontend_get_configuration_criteria(id, name, async_req=True)
        >>> result = thread.get()

        Args:
            id (str): Activity Configuration ID
            name (str): Criteria name

        Keyword Args:
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            async_req (bool): execute request asynchronously

        Returns:
            CmspbFrontendSingleTriggerResponse
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['id'] = \
            id
        kwargs['name'] = \
            name
        return self.frontend_get_configuration_criteria_endpoint.call_with_http_info(**kwargs)

    def frontend_get_configuration_parameter(
        self,
        id,
        name,
        kind,
        **kwargs
    ):
        """Get activity configuration parameter  # noqa: E501

        Get activity configuration parameter  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.frontend_get_configuration_parameter(id, name, kind, async_req=True)
        >>> result = thread.get()

        Args:
            id (str): Activity Configuration ID
            name (str): Criteria name
            kind (str): Parameter kind (configuration or execution)

        Keyword Args:
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            async_req (bool): execute request asynchronously

        Returns:
            CmspbFrontendSingleParameterResponse
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['id'] = \
            id
        kwargs['name'] = \
            name
        kwargs['kind'] = \
            kind
        return self.frontend_get_configuration_parameter_endpoint.call_with_http_info(**kwargs)

    def frontend_list_activity_configuration(
        self,
        **kwargs
    ):
        """List activity configurations  # noqa: E501

        List activity configurations  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.frontend_list_activity_configuration(async_req=True)
        >>> result = thread.get()


        Keyword Args:
            q (str): QueryBuilder query. [optional]
            sort (str): Sort order. [optional]
            limit (int): Limit. [optional]
            offset (int): Offset. [optional]
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            async_req (bool): execute request asynchronously

        Returns:
            CmspbFrontendListConfigurationsResponse
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        return self.frontend_list_activity_configuration_endpoint.call_with_http_info(**kwargs)

    def frontend_list_activity_configuration_criteria(
        self,
        id,
        **kwargs
    ):
        """List activity configuration criteria  # noqa: E501

        List activity configuration criteria  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.frontend_list_activity_configuration_criteria(id, async_req=True)
        >>> result = thread.get()

        Args:
            id (str): Activity Configuration ID

        Keyword Args:
            limit (int): Limit. [optional]
            offset (int): Offset. [optional]
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            async_req (bool): execute request asynchronously

        Returns:
            CmspbFrontendTriggersResponse
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['id'] = \
            id
        return self.frontend_list_activity_configuration_criteria_endpoint.call_with_http_info(**kwargs)

    def frontend_list_activity_configuration_parameters(
        self,
        id,
        **kwargs
    ):
        """List activity configuration parameters  # noqa: E501

        List activity configuration parameters  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.frontend_list_activity_configuration_parameters(id, async_req=True)
        >>> result = thread.get()

        Args:
            id (str): Activity Configuration ID

        Keyword Args:
            limit (int): Limit. [optional]
            offset (int): Offset. [optional]
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            async_req (bool): execute request asynchronously

        Returns:
            CmspbFrontendParametersResponse
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['id'] = \
            id
        return self.frontend_list_activity_configuration_parameters_endpoint.call_with_http_info(**kwargs)

    def frontend_list_applicable_activities(
        self,
        entity_type,
        entity_id,
        **kwargs
    ):
        """List applicable activity configurations  # noqa: E501

        List applicable activity configurations  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.frontend_list_applicable_activities(entity_type, entity_id, async_req=True)
        >>> result = thread.get()

        Args:
            entity_type (str): Entity type
            entity_id (str): Entity ID

        Keyword Args:
            sort (str): Sort order. [optional]
            limit (int): Limit. [optional]
            offset (int): Offset. [optional]
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            async_req (bool): execute request asynchronously

        Returns:
            CmspbFrontendListApplicableConfigurationsResponse
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['entity_type'] = \
            entity_type
        kwargs['entity_id'] = \
            entity_id
        return self.frontend_list_applicable_activities_endpoint.call_with_http_info(**kwargs)

    def frontend_list_applicable_entities_parameters(
        self,
        id,
        entity_type,
        **kwargs
    ):
        """List applicable entities for a configuration  # noqa: E501

        List applicable entities for a configuration  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.frontend_list_applicable_entities_parameters(id, entity_type, async_req=True)
        >>> result = thread.get()

        Args:
            id (str): Activity Configuration ID
            entity_type (str): Entity type

        Keyword Args:
            limit (int): Limit. [optional]
            offset (int): Offset. [optional]
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            async_req (bool): execute request asynchronously

        Returns:
            CmspbFrontendListApplicableEntitiesResponse
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['id'] = \
            id
        kwargs['entity_type'] = \
            entity_type
        return self.frontend_list_applicable_entities_parameters_endpoint.call_with_http_info(**kwargs)

    def frontend_list_single_activity_configuration(
        self,
        id,
        **kwargs
    ):
        """Get activity configurations  # noqa: E501

        Get activity configurations  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.frontend_list_single_activity_configuration(id, async_req=True)
        >>> result = thread.get()

        Args:
            id (str): Activity Configuration ID

        Keyword Args:
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            async_req (bool): execute request asynchronously

        Returns:
            CmspbFrontendSingleConfigurationResponse
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['id'] = \
            id
        return self.frontend_list_single_activity_configuration_endpoint.call_with_http_info(**kwargs)

    def frontend_validate_now(
        self,
        cms_validate_now_request,
        **kwargs
    ):
        """Start validate now job  # noqa: E501

        Start validate now job  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.frontend_validate_now(cms_validate_now_request, async_req=True)
        >>> result = thread.get()

        Args:
            cms_validate_now_request (CmsValidateNowRequest): Validate now request

        Keyword Args:
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            async_req (bool): execute request asynchronously

        Returns:
            CmspbFrontendRunNowJobResponse
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['cms_validate_now_request'] = \
            cms_validate_now_request
        return self.frontend_validate_now_endpoint.call_with_http_info(**kwargs)

